name: release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Choose version type'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write
  pull-requests: write

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: ./.github/actions/pnpm-setup-node

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Update version
        id: version
        run: |
          pnpm version ${{ github.event.inputs.version_type }} --no-git-tag-version || exit 1
          echo "new_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        env:
          CI: true
      
      - name: Create GitHub Release
        run: |
          git tag v${{ steps.version.outputs.new_version }}
          git push origin v${{ steps.version.outputs.new_version }}
          gh release create v${{ steps.version.outputs.new_version }} \
            --title "v${{ steps.version.outputs.new_version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit version update
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add package.json

      - name: Generate changelog
        run: pnpm changelog || exit 1

      - name: Commit changelog
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add CHANGELOG.md
          git commit -m "chore(*): release ${{ steps.version.outputs.new_version }}" || echo "No changes to commit"

      - name: Create unique branch name
        id: branch
        run: echo "branch_name=release-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT

      - name: Push changes
        run: |
          git push origin HEAD:${{ steps.branch.outputs.branch_name }} --no-verify

      - name: Create Pull Request
        run: gh pr create --title "Release v${{ steps.version.outputs.new_version }}" --body "This is a PR created by GitHub Actions." --base main --head ${{ steps.branch.outputs.branch_name }} --reviewer "fe-dudu"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}